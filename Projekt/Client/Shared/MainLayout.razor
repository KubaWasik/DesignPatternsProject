@inherits FluxorLayout
@using Fluxor
@using Fluxor.Blazor.Web.Components
@using Fluxor.Persist.Middleware
@using Projekt.Client.Stores.NameUseCase

<Layout>
    <LayoutHeader>
        <nav class="navbar navbar-dark bg-dark">
            <a class="navbar-brand d-flex align-items-center" href="#">
                <i class="d-inline-block align-top fas fa-pizza-slice mr-2"></i>
                Pizza store
            </a>
            <ul class="navbar-nav flex-row">
                @if (!string.IsNullOrWhiteSpace(NameState.Value.Name))
                {
                    <li class="nav-item">
                        <a class="nav-link" style="cursor: text">Hi @NameState.Value.Name</a>
                    </li>

                }
                <li class="nav-item ml-4 mr-4">
                    <Blazorise.Link class="nav-link" To="Orders">My orders</Blazorise.Link>
                </li>
            </ul>
        </nav>
    </LayoutHeader>
    <LayoutContent>
        <div class="d-flex flex-column justify-content-center align-items-center p-4">
            @Body
        </div>
    </LayoutContent>
</Layout>

@code
{
    [Inject]
    private IState<NameState> NameState { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        this.SubscribeToAction<InitializePersistMiddlewareResultSuccessAction>(result =>
        {
            Console.WriteLine($"**** State rehydrated**");
            this.StateHasChanged();// we now have state, we can re-render to reflect binding changes
    });
    }
}